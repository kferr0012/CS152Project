Nonterminals useless in grammar

   statement_7


Terminals unused in grammar

   FOR


Rules useless in grammar

   78 statement_7: FOR var ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP stmt_loop ENDLOOP


Grammar

    0 $accept: program $end

    1 program: function program
    2        | %empty

    3 decl_loop: declaration SEMICOLON decl_loop
    4          | %empty

    5 stmt_loop: statement SEMICOLON stmt_loop
    6          | statement SEMICOLON

    7 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS decl_loop END_PARAMS BEGIN_LOCALS decl_loop END_LOCALS BEGIN_BODY stmt_loop END_BODY

    8 declaration: IDENT declaration_2

    9 declaration_2: COMMA IDENT declaration_2
   10              | COLON declaration_3 INTEGER

   11 declaration_3: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET declaration_4 OF
   12              | %empty

   13 declaration_4: L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET
   14              | %empty

   15 statement: statement_1
   16          | statement_2
   17          | statement_3
   18          | statement_4
   19          | statement_5
   20          | statement_6
   21          | CONTINUE
   22          | RETURN expression

   23 statement_1: var ASSIGN expression

   24 statement_2: IF bool_exp THEN stmt_loop statement_21 ENDIF

   25 statement_21: ELSE stmt_loop
   26             | %empty

   27 statement_3: WHILE bool_exp BEGINLOOP stmt_loop ENDLOOP

   28 statement_4: DO BEGINLOOP stmt_loop ENDLOOP WHILE bool_exp

   29 statement_5: READ var statement_51

   30 statement_51: COMMA var statement_51
   31             | %empty

   32 statement_6: WRITE var statement_61

   33 statement_61: COMMA var statement_61
   34             | %empty

   35 bool_exp: rel_and_exp bool_exp2

   36 bool_exp2: OR rel_and_exp bool_exp2
   37          | %empty

   38 rel_and_exp: relation_exp rel_and_exp2

   39 rel_and_exp2: AND relation_exp rel_and_exp2
   40             | %empty

   41 relation_exp: relation_exp_s
   42             | NOT relation_exp_s

   43 relation_exp_s: expression comp expression
   44               | TRUE
   45               | FALSE
   46               | L_PAREN bool_exp R_PAREN

   47 comp: EQ
   48     | NEQ
   49     | LT
   50     | GT
   51     | LTE
   52     | GTE

   53 expression: mult_expr expression_2

   54 expression_2: ADD mult_expr expression_2
   55             | SUB mult_expr expression_2
   56             | %empty

   57 mult_expr: term mult_expr_2

   58 mult_expr_2: MULT mult_expr
   59            | DIV mult_expr
   60            | MOD mult_expr
   61            | %empty

   62 term: SUB term_2
   63     | term_2
   64     | term_3

   65 term_2: var
   66       | NUMBER
   67       | L_PAREN expression R_PAREN

   68 term_3: IDENT L_PAREN term_31 R_PAREN

   69 term_31: expression term_32
   70        | %empty

   71 term_32: COMMA term_31
   72        | %empty

   73 var: IDENT var_2

   74 var_2: L_SQUARE_BRACKET expression R_SQUARE_BRACKET var_3
   75      | %empty

   76 var_3: L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   77      | %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 7
SEMICOLON (259) 3 5 6 7
IDENT (260) 7 8 9 68 73
NUMBER (261) 11 13 66
BEGIN_PARAMS (262) 7
END_PARAMS (263) 7
BEGIN_LOCALS (264) 7
END_LOCALS (265) 7
BEGIN_BODY (266) 7
END_BODY (267) 7
READ (268) 29
BEGINLOOP (269) 27 28
ENDLOOP (270) 27 28
WHILE (271) 27 28
AND (272) 39
OR (273) 36
OF (274) 11
IF (275) 24
FALSE (276) 45
TRUE (277) 44
ARRAY (278) 11
ENDIF (279) 24
THEN (280) 24
ELSE (281) 25
CONTINUE (282) 21
WRITE (283) 32
COLON (284) 10
COMMA (285) 9 30 33 71
DO (286) 28
GTE (287) 52
GT (288) 50
LT (289) 49
LTE (290) 51
ASSIGN (291) 23
FOR (292)
L_SQUARE_BRACKET (293) 11 13 74 76
R_SQUARE_BRACKET (294) 11 13 74 76
MOD (295) 60
EQ (296) 47
SUB (297) 55 62
MULT (298) 58
L_PAREN (299) 46 67 68
R_PAREN (300) 46 67 68
ADD (301) 54
DIV (302) 59
INTEGER (303) 10
NEQ (304) 48
NOT (305) 42
RETURN (306) 22


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1 2, on right: 0 1
decl_loop (54)
    on left: 3 4, on right: 3 7
stmt_loop (55)
    on left: 5 6, on right: 5 7 24 25 27 28
function (56)
    on left: 7, on right: 1
declaration (57)
    on left: 8, on right: 3
declaration_2 (58)
    on left: 9 10, on right: 8 9
declaration_3 (59)
    on left: 11 12, on right: 10
declaration_4 (60)
    on left: 13 14, on right: 11
statement (61)
    on left: 15 16 17 18 19 20 21 22, on right: 5 6
statement_1 (62)
    on left: 23, on right: 15
statement_2 (63)
    on left: 24, on right: 16
statement_21 (64)
    on left: 25 26, on right: 24
statement_3 (65)
    on left: 27, on right: 17
statement_4 (66)
    on left: 28, on right: 18
statement_5 (67)
    on left: 29, on right: 19
statement_51 (68)
    on left: 30 31, on right: 29 30
statement_6 (69)
    on left: 32, on right: 20
statement_61 (70)
    on left: 33 34, on right: 32 33
bool_exp (71)
    on left: 35, on right: 24 27 28 46
bool_exp2 (72)
    on left: 36 37, on right: 35 36
rel_and_exp (73)
    on left: 38, on right: 35 36
rel_and_exp2 (74)
    on left: 39 40, on right: 38 39
relation_exp (75)
    on left: 41 42, on right: 38 39
relation_exp_s (76)
    on left: 43 44 45 46, on right: 41 42
comp (77)
    on left: 47 48 49 50 51 52, on right: 43
expression (78)
    on left: 53, on right: 22 23 43 67 69 74 76
expression_2 (79)
    on left: 54 55 56, on right: 53 54 55
mult_expr (80)
    on left: 57, on right: 53 54 55 58 59 60
mult_expr_2 (81)
    on left: 58 59 60 61, on right: 57
term (82)
    on left: 62 63 64, on right: 57
term_2 (83)
    on left: 65 66 67, on right: 62 63
term_3 (84)
    on left: 68, on right: 64
term_31 (85)
    on left: 69 70, on right: 68 71
term_32 (86)
    on left: 71 72, on right: 69
var (87)
    on left: 73, on right: 23 29 30 32 33 65
var_2 (88)
    on left: 74 75, on right: 73
var_3 (89)
    on left: 76 77, on right: 74


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    program   go to state 2
    function  go to state 3


State 1

    7 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS decl_loop END_PARAMS BEGIN_LOCALS decl_loop END_LOCALS BEGIN_BODY stmt_loop END_BODY

    IDENT  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: function . program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    program   go to state 6
    function  go to state 3


State 4

    7 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS decl_loop END_PARAMS BEGIN_LOCALS decl_loop END_LOCALS BEGIN_BODY stmt_loop END_BODY

    SEMICOLON  shift, and go to state 7


State 5

    0 $accept: program $end .

    $default  accept


State 6

    1 program: function program .

    $default  reduce using rule 1 (program)


State 7

    7 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS decl_loop END_PARAMS BEGIN_LOCALS decl_loop END_LOCALS BEGIN_BODY stmt_loop END_BODY

    BEGIN_PARAMS  shift, and go to state 8


State 8

    7 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . decl_loop END_PARAMS BEGIN_LOCALS decl_loop END_LOCALS BEGIN_BODY stmt_loop END_BODY

    IDENT  shift, and go to state 9

    $default  reduce using rule 4 (decl_loop)

    decl_loop    go to state 10
    declaration  go to state 11


State 9

    8 declaration: IDENT . declaration_2

    COLON  shift, and go to state 12
    COMMA  shift, and go to state 13

    declaration_2  go to state 14


State 10

    7 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS decl_loop . END_PARAMS BEGIN_LOCALS decl_loop END_LOCALS BEGIN_BODY stmt_loop END_BODY

    END_PARAMS  shift, and go to state 15


State 11

    3 decl_loop: declaration . SEMICOLON decl_loop

    SEMICOLON  shift, and go to state 16


State 12

   10 declaration_2: COLON . declaration_3 INTEGER

    ARRAY  shift, and go to state 17

    $default  reduce using rule 12 (declaration_3)

    declaration_3  go to state 18


State 13

    9 declaration_2: COMMA . IDENT declaration_2

    IDENT  shift, and go to state 19


State 14

    8 declaration: IDENT declaration_2 .

    $default  reduce using rule 8 (declaration)


State 15

    7 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS decl_loop END_PARAMS . BEGIN_LOCALS decl_loop END_LOCALS BEGIN_BODY stmt_loop END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 16

    3 decl_loop: declaration SEMICOLON . decl_loop

    IDENT  shift, and go to state 9

    $default  reduce using rule 4 (decl_loop)

    decl_loop    go to state 21
    declaration  go to state 11


State 17

   11 declaration_3: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET declaration_4 OF

    L_SQUARE_BRACKET  shift, and go to state 22


State 18

   10 declaration_2: COLON declaration_3 . INTEGER

    INTEGER  shift, and go to state 23


State 19

    9 declaration_2: COMMA IDENT . declaration_2

    COLON  shift, and go to state 12
    COMMA  shift, and go to state 13

    declaration_2  go to state 24


State 20

    7 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS decl_loop END_PARAMS BEGIN_LOCALS . decl_loop END_LOCALS BEGIN_BODY stmt_loop END_BODY

    IDENT  shift, and go to state 9

    $default  reduce using rule 4 (decl_loop)

    decl_loop    go to state 25
    declaration  go to state 11


State 21

    3 decl_loop: declaration SEMICOLON decl_loop .

    $default  reduce using rule 3 (decl_loop)


State 22

   11 declaration_3: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET declaration_4 OF

    NUMBER  shift, and go to state 26


State 23

   10 declaration_2: COLON declaration_3 INTEGER .

    $default  reduce using rule 10 (declaration_2)


State 24

    9 declaration_2: COMMA IDENT declaration_2 .

    $default  reduce using rule 9 (declaration_2)


State 25

    7 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS decl_loop END_PARAMS BEGIN_LOCALS decl_loop . END_LOCALS BEGIN_BODY stmt_loop END_BODY

    END_LOCALS  shift, and go to state 27


State 26

   11 declaration_3: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET declaration_4 OF

    R_SQUARE_BRACKET  shift, and go to state 28


State 27

    7 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS decl_loop END_PARAMS BEGIN_LOCALS decl_loop END_LOCALS . BEGIN_BODY stmt_loop END_BODY

    BEGIN_BODY  shift, and go to state 29


State 28

   11 declaration_3: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . declaration_4 OF

    L_SQUARE_BRACKET  shift, and go to state 30

    $default  reduce using rule 14 (declaration_4)

    declaration_4  go to state 31


State 29

    7 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS decl_loop END_PARAMS BEGIN_LOCALS decl_loop END_LOCALS BEGIN_BODY . stmt_loop END_BODY

    IDENT     shift, and go to state 32
    READ      shift, and go to state 33
    WHILE     shift, and go to state 34
    IF        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    WRITE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39

    stmt_loop    go to state 40
    statement    go to state 41
    statement_1  go to state 42
    statement_2  go to state 43
    statement_3  go to state 44
    statement_4  go to state 45
    statement_5  go to state 46
    statement_6  go to state 47
    var          go to state 48


State 30

   13 declaration_4: L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET

    NUMBER  shift, and go to state 49


State 31

   11 declaration_3: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET declaration_4 . OF

    OF  shift, and go to state 50


State 32

   73 var: IDENT . var_2

    L_SQUARE_BRACKET  shift, and go to state 51

    $default  reduce using rule 75 (var_2)

    var_2  go to state 52


State 33

   29 statement_5: READ . var statement_51

    IDENT  shift, and go to state 32

    var  go to state 53


State 34

   27 statement_3: WHILE . bool_exp BEGINLOOP stmt_loop ENDLOOP

    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55
    FALSE    shift, and go to state 56
    TRUE     shift, and go to state 57
    SUB      shift, and go to state 58
    L_PAREN  shift, and go to state 59
    NOT      shift, and go to state 60

    bool_exp        go to state 61
    rel_and_exp     go to state 62
    relation_exp    go to state 63
    relation_exp_s  go to state 64
    expression      go to state 65
    mult_expr       go to state 66
    term            go to state 67
    term_2          go to state 68
    term_3          go to state 69
    var             go to state 70


State 35

   24 statement_2: IF . bool_exp THEN stmt_loop statement_21 ENDIF

    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55
    FALSE    shift, and go to state 56
    TRUE     shift, and go to state 57
    SUB      shift, and go to state 58
    L_PAREN  shift, and go to state 59
    NOT      shift, and go to state 60

    bool_exp        go to state 71
    rel_and_exp     go to state 62
    relation_exp    go to state 63
    relation_exp_s  go to state 64
    expression      go to state 65
    mult_expr       go to state 66
    term            go to state 67
    term_2          go to state 68
    term_3          go to state 69
    var             go to state 70


State 36

   21 statement: CONTINUE .

    $default  reduce using rule 21 (statement)


State 37

   32 statement_6: WRITE . var statement_61

    IDENT  shift, and go to state 32

    var  go to state 72


State 38

   28 statement_4: DO . BEGINLOOP stmt_loop ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 73


State 39

   22 statement: RETURN . expression

    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55
    SUB      shift, and go to state 58
    L_PAREN  shift, and go to state 74

    expression  go to state 75
    mult_expr   go to state 66
    term        go to state 67
    term_2      go to state 68
    term_3      go to state 69
    var         go to state 70


State 40

    7 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS decl_loop END_PARAMS BEGIN_LOCALS decl_loop END_LOCALS BEGIN_BODY stmt_loop . END_BODY

    END_BODY  shift, and go to state 76


State 41

    5 stmt_loop: statement . SEMICOLON stmt_loop
    6          | statement . SEMICOLON

    SEMICOLON  shift, and go to state 77


State 42

   15 statement: statement_1 .

    $default  reduce using rule 15 (statement)


State 43

   16 statement: statement_2 .

    $default  reduce using rule 16 (statement)


State 44

   17 statement: statement_3 .

    $default  reduce using rule 17 (statement)


State 45

   18 statement: statement_4 .

    $default  reduce using rule 18 (statement)


State 46

   19 statement: statement_5 .

    $default  reduce using rule 19 (statement)


State 47

   20 statement: statement_6 .

    $default  reduce using rule 20 (statement)


State 48

   23 statement_1: var . ASSIGN expression

    ASSIGN  shift, and go to state 78


State 49

   13 declaration_4: L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 79


State 50

   11 declaration_3: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET declaration_4 OF .

    $default  reduce using rule 11 (declaration_3)


State 51

   74 var_2: L_SQUARE_BRACKET . expression R_SQUARE_BRACKET var_3

    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55
    SUB      shift, and go to state 58
    L_PAREN  shift, and go to state 74

    expression  go to state 80
    mult_expr   go to state 66
    term        go to state 67
    term_2      go to state 68
    term_3      go to state 69
    var         go to state 70


State 52

   73 var: IDENT var_2 .

    $default  reduce using rule 73 (var)


State 53

   29 statement_5: READ var . statement_51

    COMMA  shift, and go to state 81

    $default  reduce using rule 31 (statement_51)

    statement_51  go to state 82


State 54

   68 term_3: IDENT . L_PAREN term_31 R_PAREN
   73 var: IDENT . var_2

    L_SQUARE_BRACKET  shift, and go to state 51
    L_PAREN           shift, and go to state 83

    $default  reduce using rule 75 (var_2)

    var_2  go to state 52


State 55

   66 term_2: NUMBER .

    $default  reduce using rule 66 (term_2)


State 56

   45 relation_exp_s: FALSE .

    $default  reduce using rule 45 (relation_exp_s)


State 57

   44 relation_exp_s: TRUE .

    $default  reduce using rule 44 (relation_exp_s)


State 58

   62 term: SUB . term_2

    IDENT    shift, and go to state 32
    NUMBER   shift, and go to state 55
    L_PAREN  shift, and go to state 74

    term_2  go to state 84
    var     go to state 70


State 59

   46 relation_exp_s: L_PAREN . bool_exp R_PAREN
   67 term_2: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55
    FALSE    shift, and go to state 56
    TRUE     shift, and go to state 57
    SUB      shift, and go to state 58
    L_PAREN  shift, and go to state 59
    NOT      shift, and go to state 60

    bool_exp        go to state 85
    rel_and_exp     go to state 62
    relation_exp    go to state 63
    relation_exp_s  go to state 64
    expression      go to state 86
    mult_expr       go to state 66
    term            go to state 67
    term_2          go to state 68
    term_3          go to state 69
    var             go to state 70


State 60

   42 relation_exp: NOT . relation_exp_s

    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55
    FALSE    shift, and go to state 56
    TRUE     shift, and go to state 57
    SUB      shift, and go to state 58
    L_PAREN  shift, and go to state 59

    relation_exp_s  go to state 87
    expression      go to state 65
    mult_expr       go to state 66
    term            go to state 67
    term_2          go to state 68
    term_3          go to state 69
    var             go to state 70


State 61

   27 statement_3: WHILE bool_exp . BEGINLOOP stmt_loop ENDLOOP

    BEGINLOOP  shift, and go to state 88


State 62

   35 bool_exp: rel_and_exp . bool_exp2

    OR  shift, and go to state 89

    $default  reduce using rule 37 (bool_exp2)

    bool_exp2  go to state 90


State 63

   38 rel_and_exp: relation_exp . rel_and_exp2

    AND  shift, and go to state 91

    $default  reduce using rule 40 (rel_and_exp2)

    rel_and_exp2  go to state 92


State 64

   41 relation_exp: relation_exp_s .

    $default  reduce using rule 41 (relation_exp)


State 65

   43 relation_exp_s: expression . comp expression

    GTE  shift, and go to state 93
    GT   shift, and go to state 94
    LT   shift, and go to state 95
    LTE  shift, and go to state 96
    EQ   shift, and go to state 97
    NEQ  shift, and go to state 98

    comp  go to state 99


State 66

   53 expression: mult_expr . expression_2

    SUB  shift, and go to state 100
    ADD  shift, and go to state 101

    $default  reduce using rule 56 (expression_2)

    expression_2  go to state 102


State 67

   57 mult_expr: term . mult_expr_2

    MOD   shift, and go to state 103
    MULT  shift, and go to state 104
    DIV   shift, and go to state 105

    $default  reduce using rule 61 (mult_expr_2)

    mult_expr_2  go to state 106


State 68

   63 term: term_2 .

    $default  reduce using rule 63 (term)


State 69

   64 term: term_3 .

    $default  reduce using rule 64 (term)


State 70

   65 term_2: var .

    $default  reduce using rule 65 (term_2)


State 71

   24 statement_2: IF bool_exp . THEN stmt_loop statement_21 ENDIF

    THEN  shift, and go to state 107


State 72

   32 statement_6: WRITE var . statement_61

    COMMA  shift, and go to state 108

    $default  reduce using rule 34 (statement_61)

    statement_61  go to state 109


State 73

   28 statement_4: DO BEGINLOOP . stmt_loop ENDLOOP WHILE bool_exp

    IDENT     shift, and go to state 32
    READ      shift, and go to state 33
    WHILE     shift, and go to state 34
    IF        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    WRITE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39

    stmt_loop    go to state 110
    statement    go to state 41
    statement_1  go to state 42
    statement_2  go to state 43
    statement_3  go to state 44
    statement_4  go to state 45
    statement_5  go to state 46
    statement_6  go to state 47
    var          go to state 48


State 74

   67 term_2: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55
    SUB      shift, and go to state 58
    L_PAREN  shift, and go to state 74

    expression  go to state 111
    mult_expr   go to state 66
    term        go to state 67
    term_2      go to state 68
    term_3      go to state 69
    var         go to state 70


State 75

   22 statement: RETURN expression .

    $default  reduce using rule 22 (statement)


State 76

    7 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS decl_loop END_PARAMS BEGIN_LOCALS decl_loop END_LOCALS BEGIN_BODY stmt_loop END_BODY .

    $default  reduce using rule 7 (function)


State 77

    5 stmt_loop: statement SEMICOLON . stmt_loop
    6          | statement SEMICOLON .

    IDENT     shift, and go to state 32
    READ      shift, and go to state 33
    WHILE     shift, and go to state 34
    IF        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    WRITE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39

    $default  reduce using rule 6 (stmt_loop)

    stmt_loop    go to state 112
    statement    go to state 41
    statement_1  go to state 42
    statement_2  go to state 43
    statement_3  go to state 44
    statement_4  go to state 45
    statement_5  go to state 46
    statement_6  go to state 47
    var          go to state 48


State 78

   23 statement_1: var ASSIGN . expression

    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55
    SUB      shift, and go to state 58
    L_PAREN  shift, and go to state 74

    expression  go to state 113
    mult_expr   go to state 66
    term        go to state 67
    term_2      go to state 68
    term_3      go to state 69
    var         go to state 70


State 79

   13 declaration_4: L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET .

    $default  reduce using rule 13 (declaration_4)


State 80

   74 var_2: L_SQUARE_BRACKET expression . R_SQUARE_BRACKET var_3

    R_SQUARE_BRACKET  shift, and go to state 114


State 81

   30 statement_51: COMMA . var statement_51

    IDENT  shift, and go to state 32

    var  go to state 115


State 82

   29 statement_5: READ var statement_51 .

    $default  reduce using rule 29 (statement_5)


State 83

   68 term_3: IDENT L_PAREN . term_31 R_PAREN

    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55
    SUB      shift, and go to state 58
    L_PAREN  shift, and go to state 74

    $default  reduce using rule 70 (term_31)

    expression  go to state 116
    mult_expr   go to state 66
    term        go to state 67
    term_2      go to state 68
    term_3      go to state 69
    term_31     go to state 117
    var         go to state 70


State 84

   62 term: SUB term_2 .

    $default  reduce using rule 62 (term)


State 85

   46 relation_exp_s: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 118


State 86

   43 relation_exp_s: expression . comp expression
   67 term_2: L_PAREN expression . R_PAREN

    GTE      shift, and go to state 93
    GT       shift, and go to state 94
    LT       shift, and go to state 95
    LTE      shift, and go to state 96
    EQ       shift, and go to state 97
    R_PAREN  shift, and go to state 119
    NEQ      shift, and go to state 98

    comp  go to state 99


State 87

   42 relation_exp: NOT relation_exp_s .

    $default  reduce using rule 42 (relation_exp)


State 88

   27 statement_3: WHILE bool_exp BEGINLOOP . stmt_loop ENDLOOP

    IDENT     shift, and go to state 32
    READ      shift, and go to state 33
    WHILE     shift, and go to state 34
    IF        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    WRITE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39

    stmt_loop    go to state 120
    statement    go to state 41
    statement_1  go to state 42
    statement_2  go to state 43
    statement_3  go to state 44
    statement_4  go to state 45
    statement_5  go to state 46
    statement_6  go to state 47
    var          go to state 48


State 89

   36 bool_exp2: OR . rel_and_exp bool_exp2

    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55
    FALSE    shift, and go to state 56
    TRUE     shift, and go to state 57
    SUB      shift, and go to state 58
    L_PAREN  shift, and go to state 59
    NOT      shift, and go to state 60

    rel_and_exp     go to state 121
    relation_exp    go to state 63
    relation_exp_s  go to state 64
    expression      go to state 65
    mult_expr       go to state 66
    term            go to state 67
    term_2          go to state 68
    term_3          go to state 69
    var             go to state 70


State 90

   35 bool_exp: rel_and_exp bool_exp2 .

    $default  reduce using rule 35 (bool_exp)


State 91

   39 rel_and_exp2: AND . relation_exp rel_and_exp2

    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55
    FALSE    shift, and go to state 56
    TRUE     shift, and go to state 57
    SUB      shift, and go to state 58
    L_PAREN  shift, and go to state 59
    NOT      shift, and go to state 60

    relation_exp    go to state 122
    relation_exp_s  go to state 64
    expression      go to state 65
    mult_expr       go to state 66
    term            go to state 67
    term_2          go to state 68
    term_3          go to state 69
    var             go to state 70


State 92

   38 rel_and_exp: relation_exp rel_and_exp2 .

    $default  reduce using rule 38 (rel_and_exp)


State 93

   52 comp: GTE .

    $default  reduce using rule 52 (comp)


State 94

   50 comp: GT .

    $default  reduce using rule 50 (comp)


State 95

   49 comp: LT .

    $default  reduce using rule 49 (comp)


State 96

   51 comp: LTE .

    $default  reduce using rule 51 (comp)


State 97

   47 comp: EQ .

    $default  reduce using rule 47 (comp)


State 98

   48 comp: NEQ .

    $default  reduce using rule 48 (comp)


State 99

   43 relation_exp_s: expression comp . expression

    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55
    SUB      shift, and go to state 58
    L_PAREN  shift, and go to state 74

    expression  go to state 123
    mult_expr   go to state 66
    term        go to state 67
    term_2      go to state 68
    term_3      go to state 69
    var         go to state 70


State 100

   55 expression_2: SUB . mult_expr expression_2

    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55
    SUB      shift, and go to state 58
    L_PAREN  shift, and go to state 74

    mult_expr  go to state 124
    term       go to state 67
    term_2     go to state 68
    term_3     go to state 69
    var        go to state 70


State 101

   54 expression_2: ADD . mult_expr expression_2

    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55
    SUB      shift, and go to state 58
    L_PAREN  shift, and go to state 74

    mult_expr  go to state 125
    term       go to state 67
    term_2     go to state 68
    term_3     go to state 69
    var        go to state 70


State 102

   53 expression: mult_expr expression_2 .

    $default  reduce using rule 53 (expression)


State 103

   60 mult_expr_2: MOD . mult_expr

    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55
    SUB      shift, and go to state 58
    L_PAREN  shift, and go to state 74

    mult_expr  go to state 126
    term       go to state 67
    term_2     go to state 68
    term_3     go to state 69
    var        go to state 70


State 104

   58 mult_expr_2: MULT . mult_expr

    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55
    SUB      shift, and go to state 58
    L_PAREN  shift, and go to state 74

    mult_expr  go to state 127
    term       go to state 67
    term_2     go to state 68
    term_3     go to state 69
    var        go to state 70


State 105

   59 mult_expr_2: DIV . mult_expr

    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55
    SUB      shift, and go to state 58
    L_PAREN  shift, and go to state 74

    mult_expr  go to state 128
    term       go to state 67
    term_2     go to state 68
    term_3     go to state 69
    var        go to state 70


State 106

   57 mult_expr: term mult_expr_2 .

    $default  reduce using rule 57 (mult_expr)


State 107

   24 statement_2: IF bool_exp THEN . stmt_loop statement_21 ENDIF

    IDENT     shift, and go to state 32
    READ      shift, and go to state 33
    WHILE     shift, and go to state 34
    IF        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    WRITE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39

    stmt_loop    go to state 129
    statement    go to state 41
    statement_1  go to state 42
    statement_2  go to state 43
    statement_3  go to state 44
    statement_4  go to state 45
    statement_5  go to state 46
    statement_6  go to state 47
    var          go to state 48


State 108

   33 statement_61: COMMA . var statement_61

    IDENT  shift, and go to state 32

    var  go to state 130


State 109

   32 statement_6: WRITE var statement_61 .

    $default  reduce using rule 32 (statement_6)


State 110

   28 statement_4: DO BEGINLOOP stmt_loop . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 131


State 111

   67 term_2: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 119


State 112

    5 stmt_loop: statement SEMICOLON stmt_loop .

    $default  reduce using rule 5 (stmt_loop)


State 113

   23 statement_1: var ASSIGN expression .

    $default  reduce using rule 23 (statement_1)


State 114

   74 var_2: L_SQUARE_BRACKET expression R_SQUARE_BRACKET . var_3

    L_SQUARE_BRACKET  shift, and go to state 132

    $default  reduce using rule 77 (var_3)

    var_3  go to state 133


State 115

   30 statement_51: COMMA var . statement_51

    COMMA  shift, and go to state 81

    $default  reduce using rule 31 (statement_51)

    statement_51  go to state 134


State 116

   69 term_31: expression . term_32

    COMMA  shift, and go to state 135

    $default  reduce using rule 72 (term_32)

    term_32  go to state 136


State 117

   68 term_3: IDENT L_PAREN term_31 . R_PAREN

    R_PAREN  shift, and go to state 137


State 118

   46 relation_exp_s: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 46 (relation_exp_s)


State 119

   67 term_2: L_PAREN expression R_PAREN .

    $default  reduce using rule 67 (term_2)


State 120

   27 statement_3: WHILE bool_exp BEGINLOOP stmt_loop . ENDLOOP

    ENDLOOP  shift, and go to state 138


State 121

   36 bool_exp2: OR rel_and_exp . bool_exp2

    OR  shift, and go to state 89

    $default  reduce using rule 37 (bool_exp2)

    bool_exp2  go to state 139


State 122

   39 rel_and_exp2: AND relation_exp . rel_and_exp2

    AND  shift, and go to state 91

    $default  reduce using rule 40 (rel_and_exp2)

    rel_and_exp2  go to state 140


State 123

   43 relation_exp_s: expression comp expression .

    $default  reduce using rule 43 (relation_exp_s)


State 124

   55 expression_2: SUB mult_expr . expression_2

    SUB  shift, and go to state 100
    ADD  shift, and go to state 101

    $default  reduce using rule 56 (expression_2)

    expression_2  go to state 141


State 125

   54 expression_2: ADD mult_expr . expression_2

    SUB  shift, and go to state 100
    ADD  shift, and go to state 101

    $default  reduce using rule 56 (expression_2)

    expression_2  go to state 142


State 126

   60 mult_expr_2: MOD mult_expr .

    $default  reduce using rule 60 (mult_expr_2)


State 127

   58 mult_expr_2: MULT mult_expr .

    $default  reduce using rule 58 (mult_expr_2)


State 128

   59 mult_expr_2: DIV mult_expr .

    $default  reduce using rule 59 (mult_expr_2)


State 129

   24 statement_2: IF bool_exp THEN stmt_loop . statement_21 ENDIF

    ELSE  shift, and go to state 143

    $default  reduce using rule 26 (statement_21)

    statement_21  go to state 144


State 130

   33 statement_61: COMMA var . statement_61

    COMMA  shift, and go to state 108

    $default  reduce using rule 34 (statement_61)

    statement_61  go to state 145


State 131

   28 statement_4: DO BEGINLOOP stmt_loop ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 146


State 132

   76 var_3: L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55
    SUB      shift, and go to state 58
    L_PAREN  shift, and go to state 74

    expression  go to state 147
    mult_expr   go to state 66
    term        go to state 67
    term_2      go to state 68
    term_3      go to state 69
    var         go to state 70


State 133

   74 var_2: L_SQUARE_BRACKET expression R_SQUARE_BRACKET var_3 .

    $default  reduce using rule 74 (var_2)


State 134

   30 statement_51: COMMA var statement_51 .

    $default  reduce using rule 30 (statement_51)


State 135

   71 term_32: COMMA . term_31

    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55
    SUB      shift, and go to state 58
    L_PAREN  shift, and go to state 74

    $default  reduce using rule 70 (term_31)

    expression  go to state 116
    mult_expr   go to state 66
    term        go to state 67
    term_2      go to state 68
    term_3      go to state 69
    term_31     go to state 148
    var         go to state 70


State 136

   69 term_31: expression term_32 .

    $default  reduce using rule 69 (term_31)


State 137

   68 term_3: IDENT L_PAREN term_31 R_PAREN .

    $default  reduce using rule 68 (term_3)


State 138

   27 statement_3: WHILE bool_exp BEGINLOOP stmt_loop ENDLOOP .

    $default  reduce using rule 27 (statement_3)


State 139

   36 bool_exp2: OR rel_and_exp bool_exp2 .

    $default  reduce using rule 36 (bool_exp2)


State 140

   39 rel_and_exp2: AND relation_exp rel_and_exp2 .

    $default  reduce using rule 39 (rel_and_exp2)


State 141

   55 expression_2: SUB mult_expr expression_2 .

    $default  reduce using rule 55 (expression_2)


State 142

   54 expression_2: ADD mult_expr expression_2 .

    $default  reduce using rule 54 (expression_2)


State 143

   25 statement_21: ELSE . stmt_loop

    IDENT     shift, and go to state 32
    READ      shift, and go to state 33
    WHILE     shift, and go to state 34
    IF        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    WRITE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39

    stmt_loop    go to state 149
    statement    go to state 41
    statement_1  go to state 42
    statement_2  go to state 43
    statement_3  go to state 44
    statement_4  go to state 45
    statement_5  go to state 46
    statement_6  go to state 47
    var          go to state 48


State 144

   24 statement_2: IF bool_exp THEN stmt_loop statement_21 . ENDIF

    ENDIF  shift, and go to state 150


State 145

   33 statement_61: COMMA var statement_61 .

    $default  reduce using rule 33 (statement_61)


State 146

   28 statement_4: DO BEGINLOOP stmt_loop ENDLOOP WHILE . bool_exp

    IDENT    shift, and go to state 54
    NUMBER   shift, and go to state 55
    FALSE    shift, and go to state 56
    TRUE     shift, and go to state 57
    SUB      shift, and go to state 58
    L_PAREN  shift, and go to state 59
    NOT      shift, and go to state 60

    bool_exp        go to state 151
    rel_and_exp     go to state 62
    relation_exp    go to state 63
    relation_exp_s  go to state 64
    expression      go to state 65
    mult_expr       go to state 66
    term            go to state 67
    term_2          go to state 68
    term_3          go to state 69
    var             go to state 70


State 147

   76 var_3: L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 152


State 148

   71 term_32: COMMA term_31 .

    $default  reduce using rule 71 (term_32)


State 149

   25 statement_21: ELSE stmt_loop .

    $default  reduce using rule 25 (statement_21)


State 150

   24 statement_2: IF bool_exp THEN stmt_loop statement_21 ENDIF .

    $default  reduce using rule 24 (statement_2)


State 151

   28 statement_4: DO BEGINLOOP stmt_loop ENDLOOP WHILE bool_exp .

    $default  reduce using rule 28 (statement_4)


State 152

   76 var_3: L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 76 (var_3)
